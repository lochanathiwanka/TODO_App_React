{"version":3,"sources":["components/TasksList.js","components/InputForm.js","components/Header.js","App.js","reportWebVitals.js","index.js"],"names":["TasksList","items","deleteTask","bgColor","className","duration","easing","typeName","map","item","date","description","onClick","key","style","InputForm","props","state","addTaskToList","bind","descriptionOnChangeHandler","dateOnSelectHandler","event","preventDefault","this","newItems","Date","now","setState","Math","random","toString","document","getElementById","value","console","log","children","filteredItems","filter","target","Fragment","onSubmit","id","type","placeholder","onChange","onSelect","Component","Header","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.b1dbd0df.chunk.js","sourcesContent":["import React from 'react'\nimport FlipMove from 'react-flip-move'\n\nexport default function TasksList({ items, deleteTask, bgColor }) {\n    /* function getRandomColor() {\n        var color = \"#\" + (Math.random() * 0xFFFFFF << 0).toString(16);\n        return color;\n    }\n\n    let bgColor = getRandomColor(); */\n\n    return (\n        <div className=\"task-container\">\n            <FlipMove duration={500} easing=\"ease-in-out\" typeName={null}>\n                {\n                    items.map(item => {\n                        return (\n                            <div className=\"task\" key={item.key} >\n                                <h3 className=\"date\">{item.date}</h3>\n                                <h3 className=\"description\">{item.description}</h3>\n                                <button className=\"btnUpdate\"><i className=\"fas fa-edit\"></i></button>\n                                <button onClick={() => deleteTask(item.key)} className=\"btnDelete\"><i className=\"fas fa-minus-circle\"></i></button>\n                                <div style={{ \"backgroundColor\": bgColor }} className=\"left-border\"></div>\n                                <div style={{ \"backgroundColor\": bgColor }} className=\"right-border\"></div>\n                                <div style={{ \"backgroundColor\": bgColor }} className=\"top-border\"></div>\n                                <div style={{ \"backgroundColor\": bgColor }} className=\"bottom-border\"></div>\n                            </div>\n                        );\n                    })\n                }\n            </FlipMove>\n        </div>\n    )\n}\n","import React, { Component } from 'react';\nimport TasksList from './TasksList';\n\nexport default class InputForm extends Component {\n    constructor(props) {\n        super(props)\n\n        this.state = {\n            description: '',\n            date: '',\n            items: [],\n            bgColor: ''\n        }\n\n        this.addTaskToList = this.addTaskToList.bind(this);\n        this.descriptionOnChangeHandler = this.descriptionOnChangeHandler.bind(this);\n        this.dateOnSelectHandler = this.dateOnSelectHandler.bind(this);\n        this.deleteTask = this.deleteTask.bind(this);\n    }\n\n    addTaskToList(event) {\n        event.preventDefault();\n        if (this.state.description !== \"\" && this.state.date !== \"\") {\n            const newItems = [\n                {\n                    key: Date.now(),\n                    description: this.state.description,\n                    date: this.state.date\n                },\n                ...this.state.items];\n\n\n            this.setState({\n                items: newItems,\n                description: '',\n                date: '',\n                bgColor: \"#\" + (Math.random() * 0xFFFFFF << 0).toString(16)\n            });\n\n            document.getElementById(\"datePicker\").value = \"\";\n        }\n\n        console.log(this.props.children); \n    }\n\n    deleteTask(key) {\n        const filteredItems = this.state.items.filter(item => item.key !== key);\n        this.setState({\n            items: filteredItems\n        })\n    }\n\n    descriptionOnChangeHandler(event) {\n        this.setState({\n            description: event.target.value,\n        })\n    }\n\n    dateOnSelectHandler(event) {\n        this.setState({\n            date: event.target.value\n        })\n    }\n\n    render() {\n        return (\n            <React.Fragment>\n                <form className=\"input-form\" onSubmit={this.addTaskToList}>\n                    <input id=\"txtDescription\" type=\"text\" placeholder=\"Description\" value={this.state.description} onChange={this.descriptionOnChangeHandler} />\n                    <input id=\"datePicker\" type=\"date\" onSelect={this.dateOnSelectHandler} />\n                    <button type=\"submit\">Add</button>\n                </form>\n                <TasksList deleteTask={this.deleteTask} items={this.state.items} bgColor={this.state.bgColor} />\n            </React.Fragment>\n        );\n    }\n}\n","import React from 'react'\nimport InputForm from './InputForm'\n\nexport default function Header() {\n    return (\n        <div className=\"header\">\n            <div className=\"background-image\"/>\n            <h1>TODO</h1>\n            <InputForm />\n        </div>\n    )\n}\n","import './App.css';\nimport Header from './components/Header';\nimport './assets/style.css'\n\nfunction App() {\n    return (\n      <div className=\"App\">\n        <Header />\n      </div>\n    );\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}